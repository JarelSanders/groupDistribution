{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction GroupNamesComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 11);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const name_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Team member: \", name_r1.User, \" - Group Number: \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r0.isShow);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(name_r1.Group);\n  }\n}\nexport let GroupNamesComponent = /*#__PURE__*/(() => {\n  class GroupNamesComponent {\n    constructor() {\n      this.groupList = new FormGroup({\n        groupName: new FormControl(''),\n        groupNum: new FormControl('') //// FormControl for group number, initially empty.\n      });\n      // Declares an array to store names and groups.\n      this.names = [];\n      // Boolean to toggle the visibility of certain UI elements.\n      this.isShow = false;\n      // String to store the name of the user being added.\n      this.addUser = '';\n      // Variable to store the group number input, with a flexible type.\n      this.num = [];\n      // Function to handle the group number input validation.\n      this.groupNumber = () => {\n        this.num = document.getElementById('grpNum').value;\n        let num = document.getElementById('grpNum');\n        if (this.num <= 0 || this.num > 8) {\n          alert('Enter a number greater than 0');\n          num.disabled = false;\n        } else {\n          num.disabled = true;\n        }\n      };\n      // adds users to group list\n      this.addMember = () => {\n        this.isShow = true;\n        if (this.addUser == '' || document.getElementById('grpName').value == '' || this.num > 8) {\n          alert('Please make sure a group number(1-8) and team member is entered!');\n        } else {\n          this.names.push({\n            User: this.addUser,\n            Group: this.num\n          });\n          document.getElementById('grpName').value = '';\n        }\n      };\n      //puts added users in random groups\n      this.groupTeams = () => {\n        this.isShow = false;\n        for (var i = 0; i < this.names.length; i++) {\n          let groupNumUpdate = [Math.floor(Math.random() * this.num) + 1];\n          let mytext = document.getElementsByClassName('resultgroup2');\n          mytext[i].innerHTML = groupNumUpdate;\n        }\n      };\n      //resets page content\n      this.resetPage = () => {\n        document.getElementById('grpNum').value = '';\n        document.getElementById('grpName').value = '';\n        this.num = [];\n        this.names = [];\n        let get = document.getElementById('grpNum');\n        get.disabled = false;\n      };\n    }\n    // Lifecycle hook that runs after the component's view has been initialized\n    ngOnInit() {\n      // Resets the names array to be empty when the component is initialized.\n      this.names = [];\n    }\n  }\n  GroupNamesComponent.ɵfac = function GroupNamesComponent_Factory(t) {\n    return new (t || GroupNamesComponent)();\n  };\n  GroupNamesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GroupNamesComponent,\n    selectors: [[\"app-group-names\"]],\n    decls: 36,\n    vars: 5,\n    consts: [[1, \"container\", \"bg-light\", \"py-5\"], [1, \"fs-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [1, \"middle-action-area\"], [\"type\", \"number\", \"placeholder\", \"Group Number\", \"id\", \"grpNum\", \"formControlName\", \"groupNum\", \"min\", \"0\", 1, \"usersArea\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"type\", \"text\", \"id\", \"grpName\", \"placeholder\", \"Add Users\", \"formControlName\", \"groupName\", \"maxlength\", \"15\", 1, \"usersArea\", 3, \"ngModel\", \"ngModelChange\"], [1, \"grpUsers\"], [\"value\", \"Group Teams/Submit\", \"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", 3, \"click\"], [\"class\", \"test\", \"id\", \"grpFinal\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"grpFinal\", 1, \"test\"], [\"id\", \"resultgroup\", 1, \"resultgroup2\", 3, \"hidden\"]],\n    template: function GroupNamesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h1\");\n        i0.ɵɵtext(2, \"Welcome to Group Distributor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\", 1);\n        i0.ɵɵtext(4, \" Enter the number of groups and team members and they will randomly be added to a group number \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ul\");\n        i0.ɵɵelementStart(6, \"li\");\n        i0.ɵɵtext(7, \"Enter the number of groups\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"li\");\n        i0.ɵɵtext(9, \"Enter the names of the users you want to add to a group\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function GroupNamesComponent_Template_form_ngSubmit_10_listener() {\n          return ctx.addMember();\n        });\n        i0.ɵɵelementStart(11, \"div\", 3);\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelementStart(13, \"p\");\n        i0.ɵɵtext(14, \" Enter number of groups (1-8): \");\n        i0.ɵɵelementStart(15, \"span\");\n        i0.ɵɵelementStart(16, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function GroupNamesComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.num = $event;\n        })(\"input\", function GroupNamesComponent_Template_input_input_16_listener() {\n          return ctx.groupNumber();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p\");\n        i0.ɵɵtext(18, \" Enter your team members: \");\n        i0.ɵɵelementStart(19, \"span\");\n        i0.ɵɵelementStart(20, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function GroupNamesComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.addUser = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵelementStart(22, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GroupNamesComponent_Template_button_click_22_listener() {\n          return ctx.addMember();\n        });\n        i0.ɵɵtext(23, \" Add Member \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GroupNamesComponent_Template_button_click_24_listener() {\n          return ctx.groupTeams();\n        });\n        i0.ɵɵtext(25, \" Group Teams \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function GroupNamesComponent_Template_button_click_26_listener() {\n          return ctx.resetPage();\n        });\n        i0.ɵɵtext(27, \" Reset \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"br\");\n        i0.ɵɵelementStart(29, \"p\");\n        i0.ɵɵtext(30, \" Group(s): \");\n        i0.ɵɵelementStart(31, \"span\");\n        i0.ɵɵtext(32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"p\");\n        i0.ɵɵtext(34, \"Team Member(s):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, GroupNamesComponent_div_35_Template, 4, 3, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formGroup\", ctx.groupList);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.num);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.addUser);\n        i0.ɵɵadvance(12);\n        i0.ɵɵtextInterpolate(ctx.num);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.names);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.NumberValueAccessor, i1.MinValidator, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.MaxLengthValidator, i2.NgForOf],\n    styles: [\"button[_ngcontent-%COMP%], input[_ngcontent-%COMP%]{border-radius:30px}p[_ngcontent-%COMP%], .addUser[_ngcontent-%COMP%]{margin-top:auto}input[type=number][_ngcontent-%COMP%]::-webkit-outer-spin-button, input[type=number][_ngcontent-%COMP%]::-webkit-inner-spin-button{width:10px!important;-webkit-appearance:none}.middle-action-area[_ngcontent-%COMP%]{margin-left:12%}.container[_ngcontent-%COMP%]{max-width:800px;padding-left:30px;border-radius:20px}#grpNum[_ngcontent-%COMP%]{width:100px}#grpName[_ngcontent-%COMP%]{margin-left:27.5px}\"]\n  });\n  return GroupNamesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}